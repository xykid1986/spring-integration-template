<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<rabbit:connection-factory id="connectionFactory" username="yi" password="1986441986"/>

	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
		message-converter="xmlConverter" />

	<rabbit:admin connection-factory="connectionFactory" />
	<!-- declare queues -->
	<rabbit:queue name="myQueue" />
	<rabbit:queue name="yourQueue" />
	<rabbit:queue name="templateQueue" />

	<!-- declare exchanges -->
	<rabbit:topic-exchange name="topicExchange">
		<rabbit:bindings>
			<rabbit:binding queue="myQueue" pattern="foo.*" />
		</rabbit:bindings>
	</rabbit:topic-exchange>

	<rabbit:direct-exchange name="directExchange">
		<rabbit:bindings>
			<rabbit:binding queue="myQueue" key="foo" />
			<!-- <rabbit:binding queue="yourQueue" key="bar" /> -->
			<!-- <rabbit:binding queue="templateQueue" key="temp" /> -->
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<rabbit:fanout-exchange name="fanoutExchange">
		<rabbit:bindings>
			<rabbit:binding queue="myQueue" />
			<rabbit:binding queue="yourQueue" />
		</rabbit:bindings>
	</rabbit:fanout-exchange>

	<!-- converters must be added to rabbitmq template and inbound endpoints, 
		so payload will be in json(String) -->
	<bean id="jsonConverter"
		class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter">
	</bean>

	<bean id="xmlConverter"
		class="org.springframework.amqp.support.converter.MarshallingMessageConverter">
		<constructor-arg name="marshaller">
			<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
				<!-- defines the domain packages. put Jaxb annotations to class and fields -->
				<property name="packagesToScan" value="com.xiao.test"></property>
				<!-- do not generate xml header tag for domain objects -->
				<property name="marshallerProperties">
					<map value-type="java.lang.Boolean">
						<entry key="jaxb.fragment" value="true"></entry>
					</map>
				</property>
			</bean>
		</constructor-arg>
	</bean>
</beans>